# -*- coding: utf-8 -*-
"""
Created on Mon Jun  8 15:06:12 2020

@author: steve
"""

"""
312. Burst Balloons
https://leetcode.com/problems/burst-balloons/

"""
class Solutions:
    def maxCoins(self,nums):
        
        # Empty list
        if not nums:
            return 0
        
        self.memory = {}
        self.max_val = 0
        
        
        def find_max(self,nums):
            nums_tup = tuple(nums)
   
            if nums_tup in self.memory:
                return self.memory[nums_tup]
            
            if len(nums) == 1:
                value = nums[0]
                self.memory[nums_tup] = value
                return value
            
            if len(nums) == 2:
                value = nums[0]*nums[1] + max(nums)
                self.memory[nums_tup] = value
                return value
            
            max_val = 0          
            for i,number in enumerate(nums):
                nums_list = nums[:i].copy() + nums[i+1:].copy()
                value = 0
                value = find_max(self,nums_list)
                if i == 0:
                    value += number*nums[i+1]
                elif i == len(nums)-1:
                    value += number*nums[i-1]
                else:
                    value += nums[i-1]*number*nums[i+1]
                
                if value > max_val:
                    max_val = value
                
            self.memory[nums_tup] = max_val
            return max_val
    
        answer = find_max(self,nums)
        return answer
    
    
nums = [9,76,64,21,97]
nums = [8,3,4,3,5,0,5,6,6,2,8,5,6,2,3,8,3,5,1,0,2]
sol = Solutions()
print(sol.maxCoins(nums))